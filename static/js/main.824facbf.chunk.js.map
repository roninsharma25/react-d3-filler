{"version":3,"sources":["logo.svg","components/Filler.jsx","components/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Filler","props","colors","state","data","Math","floor","random","length","constantData","changeColor","bind","getAdjacentIndices","this","height","width","border","d3","append","attr","style","selectAll","concat","enter","x","y","size","color","on","target","__data__","flag","console","log","rectIndex","box","_groups","transition","duration","currentIndex","above","below","right","left","indices","push","dim","className","Component","HomePage","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.824facbf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport '../App.css';\nimport * as d3 from 'd3';\n\nexport default class Filler extends Component {\n    constructor(props) {\n        super(props);\n        let colors = ['red', 'blue', 'green', 'black', 'purple', 'white', 'yellow'];\n\n        this.state = {\n            data: [\n                {'x': 200, 'y': 100, 'size': 100, 'flag': false, 'color': colors[Math.floor(Math.random() * colors.length)]}, \n                {'x': 300, 'y': 100, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n                {'x': 400, 'y': 100, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n                {'x': 200, 'y': 200, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n                {'x': 300, 'y': 200, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n                {'x': 400, 'y': 200, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n                {'x': 200, 'y': 300, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n                {'x': 300, 'y': 300, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n                {'x': 400, 'y': 300, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]}\n            ],\n            constantData: [\n                {'x': 100, 'y': 450, 'size': 50, 'color': colors[0], 'flag': true}, \n                {'x': 175, 'y': 450, 'size': 50, 'color': colors[1], 'flag': true},\n                {'x': 250, 'y': 450, 'size': 50, 'color': colors[2], 'flag': true},\n                {'x': 325, 'y': 450, 'size': 50, 'color': colors[3], 'flag': true},\n                {'x': 400, 'y': 450, 'size': 50, 'color': colors[4], 'flag': true},\n                {'x': 475, 'y': 450, 'size': 50, 'color': colors[5], 'flag': true},\n                {'x': 550, 'y': 450, 'size': 50, 'color': colors[6], 'flag': true}\n            ]\n        }\n\n        this.changeColor = this.changeColor.bind(this);\n        this.getAdjacentIndices = this.getAdjacentIndices.bind(this);\n    }\n\n    componentDidMount() {\n        let { data, constantData } = this.state;\n        let { height, width, border } = this.props;\n\n        let svg = d3.select('.Vis')\n            .append('svg')\n            .attr('height', height)\n            .attr('width', width)\n            .style('border', border)\n\n        let squares = svg.selectAll('rect')\n            .data(data.concat(constantData))\n            .enter()\n            .append('rect')\n        \n        let squareAttributes = squares\n            .attr('x', (data) => (data.x))\n            .attr('y', (data) => (data.y))\n            .attr('height', (data) => (data.size))\n            .attr('width', (data) => (data.size))\n            .style('fill', (data) => (data.color))\n            .attr('stroke', 'black')\n            .on('click', (data) => {\n                if (data.target.__data__.flag) this.changeColor(data.target.__data__.color, 1) \n                else console.log(\"NOTHING: \" + data.target.__data__.color)\n            })\n        \n        this.getAdjacentIndices(4);\n    }\n\n    changeColor(color, rectIndex) {\n        let box = d3.selectAll('rect')._groups[0][rectIndex];\n\n        d3.select(box)\n            .transition()\n            .duration(2000)\n            .style('fill', color)\n    }\n\n    getAdjacentIndices(currentIndex) {\n        let dim = 3;\n        let maxIndex = 8;\n\n        let above = currentIndex - dim;\n        let below = currentIndex + dim;\n        let right = currentIndex + 1;\n        let left = currentIndex - 1;\n\n        let indices = [];\n\n        if (above >= 0) {\n            indices.push(above);\n        }\n\n        if (below <= maxIndex) {\n            indices.push(below);\n        }\n\n        if (currentIndex % dim !== dim - 1) {\n            indices.push(right);\n        }\n\n        if (currentIndex % dim !== 0) {\n            indices.push(left);\n        }\n\n        console.log(indices);\n        \n    }\n\n    render() {\n        return (\n            <div className=\"Vis\"></div>\n        )\n    }\n          \n}\n","import React, { Component } from 'react';\nimport Filler from './Filler';\nimport '../App.css';\n\nexport default class HomePage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Filler height={600} width={700} border='5px solid white'/>\n        )\n    }\n}","import logo from './logo.svg';\nimport './App.css';\nimport HomePage from './components/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <HomePage />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}