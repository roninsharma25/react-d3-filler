{"version":3,"sources":["logo.svg","components/Filler.jsx","components/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Filler","props","state","playerScores","playerBoxes","currentPlayer","prevColors","playerArrows","changeColor","bind","getAdjacentIndices","this","main","updateText","changeColors","colors","allObjs","d3","_groups","forEach","color","index","style","entry","indexOf","dim","start","delta","size","x","className","flag","data","y","i","j","Math","floor","random","length","push","select","text","generateData","constantData","height","width","border","svg","append","attr","selectAll","concat","enter","on","target","__data__","update","textColor","titleSize","player1Arrow","player2Arrow","setState","prevPlayer1Boxes","allIndices","num","newIndices","getNewIndices","filter","item","includes","updatedColors","changeOpacity","indices","inputColor","allRects","newRects","rectIndices","rectIndex","rect","transition","duration","currentIndex","above","below","right","left","Component","HomePage","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cca0c95.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport '../App.css';\nimport * as d3 from 'd3';\n\nexport default class Filler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playerScores: [1, 1],\n            playerBoxes: [[90], [9]],\n            currentPlayer: 0,\n            prevColors: ['',''],\n            playerArrows: ['','']\n        }\n\n        this.changeColor = this.changeColor.bind(this);\n        this.getAdjacentIndices = this.getAdjacentIndices.bind(this);\n    }\n\n    componentDidMount() {\n        this.main()\n    }\n\n    componentDidUpdate() {\n        this.updateText();\n    }\n\n    // Resets all opacities and changes the specified ones\n    changeOpacity(changeColors) {\n        let colors = ['red', 'blue', 'green', 'black', 'purple', 'white', 'yellow'];\n        let allObjs = d3.selectAll('.bottom')._groups[0];\n        colors.forEach((color, index) => {\n            d3.select(allObjs[index])\n                .style('opacity', 1.0)\n        })\n        \n        changeColors.forEach((entry) => {\n            if (entry !== '') {\n                d3.select(allObjs[colors.indexOf(entry)])\n                    .style('opacity', 0.1)\n            }\n        })\n    }\n\n    generateData(dim, start, delta, size, flag = false) {\n        let colors = ['red', 'blue', 'green', 'black', 'purple', 'white', 'yellow'];\n        let data = [];\n        let x;\n        let y = start[1];\n        let color;\n        let className;\n\n        for (let i = 0; i < dim[0]; i++) {\n            x = start[0];\n            for (let j = 0; j < dim[1]; j++ ) {\n                color = flag ? colors[j] : colors[Math.floor(Math.random() * colors.length)];\n                className = flag ? 'bottom' : 'top';\n                data.push({'x': x, 'y': y, 'size': size, 'flag': flag, 'color': color, 'className': className});\n                x += delta[0];\n            }\n            y += delta[1];\n          }\n        return data;\n    }\n\n    updateText() {\n        if (this.state.currentPlayer) { // Player 2\n            d3.select('.Vis').select('.player2')\n                .text('Player 2 Score: ' + this.state.playerScores[1])\n        } else { // Player 1\n            d3.select('.player1')\n                .text('Player 1 Score: ' + this.state.playerScores[0])\n        }\n    }\n    \n    main() {\n        let data = this.generateData(...[[10, 10], [150, 75], [40, 40], 40]);\n        let constantData = this.generateData(...[[1, 7], [50, 515], [90, 100], 50, true]);\n        let { height, width, border } = this.props;\n\n        let svg = d3.select('.Vis')\n            .append('svg')\n            .attr('height', height)\n            .attr('width', width)\n            .style('border', border)\n\n        let squares = svg.selectAll('rect')\n            .data(data.concat(constantData))\n            .enter()\n            .append('rect')\n        \n        squares\n            .attr('x', (data) => (data.x))\n            .attr('y', (data) => (data.y))\n            .attr('height', (data) => (data.size))\n            .attr('width', (data) => (data.size))\n            .style('fill', (data) => (data.color))\n            .attr('stroke', 'black')\n            .attr('class', (data) => (data.className))\n            .on('click', (data) => {\n                if (data.target.__data__.flag & d3.select(data.target).style('opacity')) this.update(data.target.__data__.color)\n            })\n        \n        let textColor = 'white';\n        let titleSize = '25px';\n\n        let playerScores = this.state.playerScores;\n    \n        svg.append('text')\n            .attr('x', this.props.width / 4)\n            .attr('y', 50)\n            .attr('text-anchor', 'middle')\n            .style('fill', textColor)\n            .style('font-size', titleSize)\n            .style('text-decoration', 'underline')\n            .text('Player 1 Score: ' + playerScores[0])\n            .attr('class', 'player1')\n        \n        svg.append('text')\n            .attr('x', this.props.width * 3 / 4)\n            .attr('y', 50)\n            .attr('text-anchor', 'middle')\n            .style('fill', textColor)\n            .style('font-size', titleSize)\n            .style('text-decoration', 'underline')\n            .text('Player 2 Score: ' + playerScores[1])\n            .attr('class', 'player2')\n\n        let player1Arrow = svg.append('line')\n            .attr('x1', 25)\n            .attr('y1', 45)\n            .attr('x2', 75)\n            .attr('y2', 45)\n            .attr('stroke-width', 5)\n            .attr('stroke', 'white')\n            .attr('marker-end', 'url(#triangle)')\n            //.style('visibility', 'hidden')\n        \n        let player2Arrow = svg.append('line')\n            .attr('x1', 370)\n            .attr('y1', 45)\n            .attr('x2', 420)\n            .attr('y2', 45)\n            .attr('stroke-width', 5)\n            .attr('stroke', 'white')\n            .attr('marker-end', 'url(#triangle)')\n            .style('visibility', 'hidden')\n        \n        svg.append(\"svg:defs\").append(\"svg:marker\")\n            .attr(\"id\", \"triangle\")\n            .attr(\"refX\", 6)\n            .attr(\"refY\", 6)\n            .attr(\"markerWidth\", 30)\n            .attr(\"markerHeight\", 30)\n            .attr(\"markerUnits\", \"userSpaceOnUse\")\n            .attr(\"orient\", \"auto\")\n            .append(\"path\")\n            .attr(\"d\", \"M 0 0 12 6 0 12 3 6\")\n            .style(\"fill\", \"red\");\n        \n        this.setState({playerArrows: [player1Arrow, player2Arrow]})\n    }\n\n    update(color) {\n        let prevPlayer1Boxes = this.state.playerBoxes[this.state.currentPlayer];\n        let allIndices = prevPlayer1Boxes;\n        allIndices.forEach(num => allIndices = allIndices.concat(this.getAdjacentIndices(num)));\n\n        let newIndices = prevPlayer1Boxes.concat(this.getNewIndices(allIndices, color));\n        newIndices = newIndices.filter((item, index) => newIndices.indexOf(item) === index);\n\n        // Remove indices belonging to the other player\n        newIndices = newIndices.filter((item) => !this.state.playerBoxes[1 - this.state.currentPlayer].includes(item));\n\n        let playerScores = this.state.playerScores;\n        let playerBoxes = this.state.playerBoxes;\n        let prevColors = this.state.prevColors;\n\n        this.changeColor(newIndices, color);\n        let updatedColors = this.state.currentPlayer ? [prevColors[0], color] : [color, prevColors[1]];\n        this.changeOpacity(updatedColors)\n        this.setState({prevColors: updatedColors})\n        \n        if (this.state.currentPlayer) { // Player 2 \n            this.setState({playerBoxes: [playerBoxes[0], newIndices]});\n            this.setState({playerScores: [playerScores[0], newIndices.length]});\n        } else { // Player 1\n            this.setState({playerBoxes: [newIndices, playerBoxes[1]]});\n            this.setState({playerScores: [newIndices.length, playerScores[1]]});\n        }\n        this.state.playerArrows[this.state.currentPlayer]\n            .style('visibility', 'hidden')\n        this.state.playerArrows[1 - this.state.currentPlayer]\n            .style('visibility', 'visible')\n        this.setState({currentPlayer: 1 - this.state.currentPlayer});\n    }\n\n    getNewIndices(indices, inputColor) {\n        let allRects = d3.selectAll('rect')._groups[0];\n        let newRects = [];\n\n        indices.forEach((num) => {\n            let temp = allRects[num].__data__.color === inputColor ? newRects.push(num) : null;\n        })\n\n        return newRects;\n    }\n\n    changeColor(rectIndices, color) {\n        rectIndices.forEach((rectIndex) => {\n            let rect = d3.selectAll('rect')._groups[0][rectIndex];\n\n            d3.select(rect)\n                .transition()\n                .duration(2000)\n                .style('fill', color)\n        })\n    }\n\n    getAdjacentIndices(currentIndex) {\n        let dim = 10;\n        let maxIndex = 99;\n\n        let above = currentIndex - dim;\n        let below = currentIndex + dim;\n        let right = currentIndex + 1;\n        let left = currentIndex - 1;\n\n        let indices = [];\n\n        if (above >= 0) {\n            indices.push(above);\n        }\n\n        if (below <= maxIndex) {\n            indices.push(below);\n        }\n\n        if (currentIndex % dim !== dim - 1) {\n            indices.push(right);\n        }\n\n        if (currentIndex % dim !== 0) {\n            indices.push(left);\n        }\n\n        return indices;        \n    }\n\n    render() {\n        return (\n            <div className=\"Vis\"></div>\n        )\n    }\n          \n}\n","import React, { Component } from 'react';\nimport Filler from './Filler';\nimport '../App.css';\n\nexport default class HomePage extends Component {\n    render() {\n        return (\n            <Filler height={600} width={700} border='5px solid white'/>\n        )\n    }\n}","import logo from './logo.svg';\nimport './App.css';\nimport HomePage from './components/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <HomePage />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}