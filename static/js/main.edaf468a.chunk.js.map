{"version":3,"sources":["logo.svg","components/Visualizations.jsx","App.js","reportWebVitals.js","index.js"],"names":["Visualizations","props","colors","data","Math","floor","random","length","constantData","d3","append","attr","style","selectAll","concat","enter","x","y","size","color","on","target","__data__","flag","console","log","className","Component","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edaf468a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport '../App.css';\nimport * as d3 from 'd3';\n\nexport default class Visualizations extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        \n        let colors = ['red', 'blue', 'green', 'black', 'purple', 'white', 'yellow'];\n        let data = [\n            {'x': 200, 'y': 100, 'size': 100, 'flag': false, 'color': colors[Math.floor(Math.random() * colors.length)]}, \n            {'x': 300, 'y': 100, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n            {'x': 400, 'y': 100, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n            {'x': 200, 'y': 200, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n            {'x': 300, 'y': 200, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n            {'x': 400, 'y': 200, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n            {'x': 200, 'y': 300, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n            {'x': 300, 'y': 300, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]},\n            {'x': 400, 'y': 300, 'size': 100, 'color': colors[Math.floor(Math.random() * colors.length)]}\n        ];\n\n        let constantData = [\n            {'x': 100, 'y': 450, 'size': 50, 'color': colors[0], 'flag': true}, \n            {'x': 175, 'y': 450, 'size': 50, 'color': colors[1]},\n            {'x': 250, 'y': 450, 'size': 50, 'color': colors[2]},\n            {'x': 325, 'y': 450, 'size': 50, 'color': colors[3]},\n            {'x': 400, 'y': 450, 'size': 50, 'color': colors[4]},\n            {'x': 475, 'y': 450, 'size': 50, 'color': colors[5]},\n            {'x': 550, 'y': 450, 'size': 50, 'color': colors[6]}\n        ];\n\n        let svg = d3.select('.Vis')\n            .append('svg')\n            .attr('width', 700)\n            .attr('height', 600)\n            .style('border', '5px solid white')\n\n        let squares = svg.selectAll('rect')\n            .data(data.concat(constantData))\n            .enter()\n            .append('rect')\n        \n        let squareAttributes = squares\n            .attr('x', (data) => (data.x))\n            .attr('y', (data) => (data.y))\n            .attr('height', (data) => (data.size))\n            .attr('width', (data) => (data.size))\n            .style('fill', (data) => (data.color))\n            .on('click', (data) => {\n                if (data.target.__data__.flag) console.log(data.target.__data__.color)\n                else console.log(\"NOTHING: \" + data.target.__data__.color)\n            })\n\n    }\n    render() {\n        return (\n            <div className=\"Vis\"></div>\n        )\n    }\n          \n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Visualizations from './components/Visualizations';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        <Visualizations />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}